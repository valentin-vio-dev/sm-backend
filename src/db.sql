DROP TABLE IF EXISTS Images CASCADE;
DROP TABLE IF EXISTS Documents CASCADE;
DROP TABLE IF EXISTS Employees CASCADE;
DROP TABLE IF EXISTS Ratings CASCADE;
DROP TABLE IF EXISTS Wishes CASCADE;
DROP TABLE IF EXISTS Products CASCADE;
DROP TABLE IF EXISTS TagProdRel CASCADE;
DROP TABLE IF EXISTS ProdTypeSpecRel CASCADE;
DROP TABLE IF EXISTS ProdSpecValueRel CASCADE;
DROP TABLE IF EXISTS Tags CASCADE;
DROP TABLE IF EXISTS SpecificationValues CASCADE;
DROP TABLE IF EXISTS Specifications CASCADE;
DROP TABLE IF EXISTS Manufacturers CASCADE;
DROP TABLE IF EXISTS Categories CASCADE;
DROP TABLE IF EXISTS Avaibilities CASCADE;
DROP TABLE IF EXISTS Guarantees CASCADE;
DROP TABLE IF EXISTS Orders CASCADE;
DROP TABLE IF EXISTS Locations CASCADE;
DROP TABLE IF EXISTS Customers CASCADE;
DROP TABLE IF EXISTS ProductTypes CASCADE;
DROP TABLE IF EXISTS PaymentTypes CASCADE;
DROP TABLE IF EXISTS PaymentStatus CASCADE;
DROP TABLE IF EXISTS OrderStatus CASCADE;
DROP TABLE IF EXISTS OrderProductRel CASCADE;


CREATE TABLE Employees (
    id SERIAL PRIMARY KEY,
    firstname VARCHAR NOT NULL,
    lastname VARCHAR NOT NULL,
    email VARCHAR NOT NULL,
    password VARCHAR NOT NULL,
    role VARCHAR NOT NULL,
    lastLoggedIn DATE
);

CREATE TABLE Images (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    url VARCHAR NOT NULL,
    entityType VARCHAR NOT NULL,
    _entityId INTEGER NOT NULL
);

CREATE TABLE Documents (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    url VARCHAR NOT NULL,
    entityType VARCHAR NOT NULL,
    _entityId INTEGER NOT NULL
);

CREATE TABLE Manufacturers (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    company_name VARCHAR NOT NULL,
    phone VARCHAR,
    email VARCHAR,
    website VARCHAR,
    description VARCHAR
);

CREATE TABLE Categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    _parentCategoryId INTEGER
);

CREATE TABLE Avaibilities (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL
);

CREATE TABLE Guarantees (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL
);

CREATE TABLE Tags (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL
);

CREATE TABLE ProductTypes (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    description VARCHAR
);

CREATE TABLE Specifications (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    type VARCHAR NOT NULL
);

CREATE TABLE SpecificationValues (
    id SERIAL PRIMARY KEY,
    name VARCHAR NOT NULL,
    _specId INTEGER NOT NULL
);

CREATE TABLE Customers (
    id SERIAL PRIMARY KEY,
    firstname VARCHAR NOT NULL,
    lastname VARCHAR NOT NULL,
    email VARCHAR NOT NULL,
    password VARCHAR NOT NULL
);

CREATE TABLE Locations (
    id SERIAL PRIMARY KEY,
    postalCode VARCHAR NOT NULL,
    country VARCHAR NOT NULL,
    city VARCHAR NOT NULL,
    street VARCHAR NOT NULL,
    houseNumber VARCHAR NOT NULL,
    floor VARCHAR,
    door VARCHAR,
    _customerId INTEGER NOT NULL
);

CREATE TABLE Products (
    id SERIAL PRIMARY KEY,
    productCode VARCHAR NOT NULL,
    name VARCHAR NOT NULL,
    price INTEGER NOT NULL,
    oldPrice INTEGER NOT NULL,
    shippingPrice INTEGER,
    shortDescription VARCHAR,
    longDescription VARCHAR,
    packageContent VARCHAR,
    _categoryId INTEGER NOT NULL,
    _avaibilityId INTEGER NOT NULL,
    _guaranteeId INTEGER NOT NULL,
    _prodTypeId INTEGER NOT NULL,
    _manufacturerId INTEGER NOT NULL
);

CREATE TABLE Ratings (
    id SERIAL PRIMARY KEY,
    date DATE NOT NULL,
    positive VARCHAR,
    negative VARCHAR,
    rating INTEGER,
    _customerId INTEGER NOT NULL,
    _productId INTEGER NOT NULL
);

CREATE TABLE Wishes (
    id SERIAL PRIMARY KEY,
    _customerId INTEGER NOT NULL,
    _productId INTEGER NOT NULL
);

CREATE TABLE PaymentTypes (
    id SERIAL PRIMARY KEY,
    type VARCHAR NOT NULL
);

CREATE TABLE PaymentStatus (
    id SERIAL PRIMARY KEY,
    status VARCHAR NOT NULL
);

CREATE TABLE OrderStatus (
    id SERIAL PRIMARY KEY,
    status VARCHAR NOT NULL
);

CREATE TABLE Orders (
    id SERIAL PRIMARY KEY,
    date DATE NOT NULL,
    _customerId INTEGER NOT NULL,
    _locationId INTEGER NOT NULL,
    _orderStatusId INTEGER NOT NULL,
    _paymentTypeId INTEGER NOT NULL,
    _paymentStatusId INTEGER NOT NULL
);

CREATE TABLE OrderProductRel (
    id SERIAL PRIMARY KEY,
    _productId INTEGER NOT NULL,
    _orderId INTEGER NOT NULL
);

CREATE TABLE TagProdRel (
    id SERIAL PRIMARY KEY,
    _tagId INTEGER NOT NULL,
    _productId INTEGER NOT NULL
);

CREATE TABLE ProdTypeSpecRel (
    id SERIAL PRIMARY KEY,
    _prodTypeId INTEGER NOT NULL,
    _specId INTEGER NOT NULL
);

CREATE TABLE ProdSpecValueRel (
    id SERIAL PRIMARY KEY,
    _productId INTEGER NOT NULL,
    _specValueId INTEGER NOT NULL
);


ALTER TABLE Categories ADD CONSTRAINT cCPID FOREIGN KEY(_parentCategoryId) REFERENCES Categories(id) ON DELETE CASCADE;

ALTER TABLE SpecificationValues ADD CONSTRAINT cSID FOREIGN KEY(_specId) REFERENCES Specifications(id) ON DELETE CASCADE;

ALTER TABLE Locations ADD CONSTRAINT cCID FOREIGN KEY(_customerId) REFERENCES Customers(id) ON DELETE CASCADE;

ALTER TABLE Products ADD CONSTRAINT cCID FOREIGN KEY(_categoryId) REFERENCES Categories(id) ON DELETE CASCADE;
ALTER TABLE Products ADD CONSTRAINT cAID FOREIGN KEY(_avaibilityId) REFERENCES Avaibilities(id) ON DELETE CASCADE;
ALTER TABLE Products ADD CONSTRAINT cGID FOREIGN KEY(_guaranteeId) REFERENCES Guarantees(id) ON DELETE CASCADE;
ALTER TABLE Products ADD CONSTRAINT cPTID FOREIGN KEY(_prodTypeId) REFERENCES ProductTypes(id) ON DELETE CASCADE;
ALTER TABLE Products ADD CONSTRAINT cMID FOREIGN KEY(_manufacturerId) REFERENCES Manufacturers(id) ON DELETE CASCADE;

ALTER TABLE Ratings ADD CONSTRAINT cCID FOREIGN KEY(_customerId) REFERENCES Customers(id) ON DELETE CASCADE;
ALTER TABLE Ratings ADD CONSTRAINT cPID FOREIGN KEY(_productId) REFERENCES Products(id) ON DELETE CASCADE;

ALTER TABLE Wishes ADD CONSTRAINT cCID FOREIGN KEY(_customerId) REFERENCES Customers(id) ON DELETE CASCADE;
ALTER TABLE Wishes ADD CONSTRAINT cPID FOREIGN KEY(_productId) REFERENCES Products(id) ON DELETE CASCADE;

ALTER TABLE Orders ADD CONSTRAINT cCID FOREIGN KEY(_customerId) REFERENCES Customers(id) ON DELETE CASCADE;
ALTER TABLE Orders ADD CONSTRAINT cLID FOREIGN KEY(_locationId) REFERENCES Locations(id) ON DELETE CASCADE;
ALTER TABLE Orders ADD CONSTRAINT cOSID FOREIGN KEY(_orderStatusId) REFERENCES OrderStatus(id) ON DELETE CASCADE;
ALTER TABLE Orders ADD CONSTRAINT cPTID FOREIGN KEY(_paymentTypeId) REFERENCES PaymentTypes(id) ON DELETE CASCADE;
ALTER TABLE Orders ADD CONSTRAINT cPSID FOREIGN KEY(_paymentStatusId) REFERENCES PaymentStatus(id) ON DELETE CASCADE;

ALTER TABLE OrderProductRel ADD CONSTRAINT cPID FOREIGN KEY(_productId) REFERENCES Products(id) ON DELETE CASCADE;
ALTER TABLE OrderProductRel ADD CONSTRAINT cOID FOREIGN KEY(_orderId) REFERENCES Orders(id) ON DELETE CASCADE;

ALTER TABLE TagProdRel ADD CONSTRAINT cTID FOREIGN KEY(_tagId) REFERENCES Tags(id) ON DELETE CASCADE;
ALTER TABLE TagProdRel ADD CONSTRAINT cPID FOREIGN KEY(_productId) REFERENCES Products(id) ON DELETE CASCADE;

ALTER TABLE ProdTypeSpecRel ADD CONSTRAINT cPTID FOREIGN KEY(_prodTypeId) REFERENCES ProductTypes(id) ON DELETE CASCADE;
ALTER TABLE ProdTypeSpecRel ADD CONSTRAINT cSID FOREIGN KEY(_specId) REFERENCES Specifications(id) ON DELETE CASCADE;

ALTER TABLE ProdSpecValueRel ADD CONSTRAINT cPID FOREIGN KEY(_productId) REFERENCES Products(id) ON DELETE CASCADE;
ALTER TABLE ProdSpecValueRel ADD CONSTRAINT cSVID FOREIGN KEY(_specValueId) REFERENCES SpecificationValues(id) ON DELETE CASCADE;